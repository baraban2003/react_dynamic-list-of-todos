{"version":3,"sources":["types/Filter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filter","TodoList","todos","setTodoId","todoId","search","filter","useState","hoveredTodo","setHoveredTodo","filteredTodo","todo","active","completed","title","toLowerCase","includes","className","map","id","onMouseEnter","onMouseLeave","classNames","onClick","type","TodoFilter","setFilter","setSearch","value","onChange","e","target","all","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","user","setUser","loading","setLoading","useEffect","userId","finally","href","email","name","App","todosArr","setTodos","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9e1a75ea.chunk.js","sourcesContent":["export enum Filter {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { Filter } from '../../types/Filter';\n\ntype Props = {\n  todos: Todo[],\n  setTodoId: (currentTodoId: number | null) => void,\n  todoId: number | null,\n  search: string,\n  filter: Filter,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setTodoId,\n  todoId,\n  search,\n  filter,\n}) => {\n  const [hoveredTodo, setHoveredTodo] = useState<null | number>(null);\n\n  const filteredTodo = todos.filter(todo => {\n    if (filter === Filter.active) {\n      return !todo.completed;\n    }\n\n    if (filter === Filter.completed) {\n      return todo.completed;\n    }\n\n    return todo;\n  }).filter(todo => todo\n    .title.toLowerCase().includes(search.toLowerCase()));\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {\n          filteredTodo\n            .map(todo => {\n              const { id, title, completed } = todo;\n\n              return (\n                <tr\n                  key={id}\n                  data-cy=\"todo\"\n                  onMouseEnter={() => setHoveredTodo(id)}\n                  onMouseLeave={() => setHoveredTodo(null)}\n                  className={classNames({\n                    'has-background-info-light':\n                      (todoId === id) || (hoveredTodo === id),\n                  })}\n                >\n                  <td className=\"is-vcentered\">{todo.id}</td>\n                  <td className=\"is-vcentered\">\n                    {\n                      completed && (\n                        <span className=\"icon\" data-cy=\"iconCompleted\">\n                          <i className=\"fas fa-check\" />\n                        </span>\n                      )\n                    }\n                  </td>\n                  <td className=\"is-vcentered is-expanded\">\n                    <p\n                      className={classNames({\n                        'has-text-success': completed,\n                        'has-text-danger': !completed,\n                      })}\n                    >\n                      {title}\n                    </p>\n                  </td>\n                  <td className=\"has-text-right is-vcentered\">\n                    <button\n                      onClick={() => setTodoId(id)}\n                      data-cy=\"selectButton\"\n                      className=\"button\"\n                      type=\"button\"\n                    >\n                      <span className=\"icon\">\n                        <i\n                          className={classNames('far', {\n                            'fa-eye': !(todoId === id),\n                            'fa-eye-slash': todoId === id,\n                          })}\n                        />\n                      </span>\n                    </button>\n                  </td>\n                </tr>\n              );\n            })\n        }\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { Filter } from '../../types/Filter';\n\ntype Props = {\n  setFilter: (value: Filter) => void,\n  filter: Filter,\n  search: string\n  setSearch: (value: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setFilter,\n  filter,\n  search,\n  setSearch,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={(e) => setFilter(e.target.value as Filter)}\n          >\n            <option value={Filter.all}>All</option>\n            <option value={Filter.active}>Active</option>\n            <option value={Filter.completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={search}\n          onChange={(e) => setSearch(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {search && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setSearch('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todoId: number\n  setTodoId: (currentTodoId: number | null) => void\n  todo: Todo\n}\n\nexport const TodoModal: React.FC<Props> = ({ todoId, setTodoId, todo }) => {\n  const [user, setUser] = useState<null | User>(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (todoId) {\n      setLoading(true);\n\n      getUser(todo.userId)\n        .then(setUser)\n        .finally(() => setLoading(false));\n    }\n  }, [todo, todoId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {(loading || user === null) ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setTodoId(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {\n                todo.completed ? (\n                  <strong className=\"has-text-success\">Done</strong>\n                ) : (\n                  <strong className=\"has-text-danger\">Planned</strong>\n                )\n              }\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Filter } from './types/Filter';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filter, setFilter] = useState<Filter>(Filter.all);\n  const [search, setSearch] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [todoId, setTodoId] = useState<number | null>(null);\n\n  const findTodoById = (id: number, todosArr: Todo[]): Todo => {\n    return todosArr.find(todo => todo.id === id) as Todo;\n  };\n\n  useEffect(() => {\n    setLoading(true);\n\n    getTodos()\n      .then(setTodos)\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filter={filter}\n                setFilter={setFilter}\n                search={search}\n                setSearch={setSearch}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  search={search}\n                  filter={filter}\n                  todos={todos}\n                  setTodoId={setTodoId}\n                  todoId={todoId}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {todoId && (\n        <TodoModal\n          todo={findTodoById(todoId, todos)}\n          todoId={todoId}\n          setTodoId={setTodoId}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}